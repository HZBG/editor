{"code":"import Point from 'ol/geom/Point';\r\nimport * as ol from 'ol';\r\nimport OSM from 'ol/source/OSM';\r\nimport sVector from 'ol/source/Vector';\r\nimport lVector from 'ol/layer/Vector';\r\nimport { fromLonLat, toLonLat } from 'ol/proj';\r\nimport { Tile as TileLayer } from 'ol/layer';\r\nimport { Icon, Style } from 'ol/style';\r\nimport features from './features';\r\nimport { defaults as defaultInteractions } from 'ol/interaction';\r\nimport KeyboardZoom from 'ol/interaction/KeyboardZoom';\r\nimport { defaults as defaultControls } from 'ol/control';\r\nvar iconStyle = new Style({\r\n    image: new Icon(({\r\n        anchor: [0.5, 18],\r\n        anchorXUnits: 'fraction',\r\n        anchorYUnits: 'pixels',\r\n        src: 'assets/img/rico.png'\r\n    }))\r\n});\r\nvar activeStyle = new Style({\r\n    image: new Icon(({\r\n        anchor: [0.5, 18],\r\n        anchorXUnits: 'fraction',\r\n        anchorYUnits: 'pixels',\r\n        src: 'assets/img/bico.png'\r\n    }))\r\n});\r\nvar currentStyle = new Style({\r\n    image: new Icon(({\r\n        anchor: [0.5, 18],\r\n        anchorXUnits: 'fraction',\r\n        anchorYUnits: 'pixels',\r\n        src: 'assets/img/gico.png'\r\n    }))\r\n});\r\nfeatures.icons.forEach(function (element) {\r\n    element.setStyle(iconStyle);\r\n});\r\nvar vectorSource = new sVector({\r\n    features: features.icons\r\n});\r\nvar vectorLayer = new lVector({\r\n    source: vectorSource,\r\n    name: \"Marker\"\r\n});\r\nvar map = new ol.Map({\r\n    layers: [\r\n        new TileLayer({\r\n            source: new OSM(),\r\n        }),\r\n        vectorLayer\r\n    ],\r\n    target: 'map',\r\n    view: new ol.View({\r\n        center: fromLonLat([15.6979, 48.2831]),\r\n        zoom: 15,\r\n        maxZoom: 18,\r\n    }),\r\n    interactions: defaultInteractions({ keyboard: false }).extend([new KeyboardZoom()]),\r\n    controls: defaultControls({ attribution: false })\r\n});\r\nvar bb = 0;\r\nmap.on('click', function (evt) {\r\n});\r\nfunction saveFile(name, type, data) {\r\n    if (data != null && navigator.msSaveBlob)\r\n        return navigator.msSaveBlob(new Blob([data], { type: type }), name);\r\n    var a = $(\"<a style='display: none;'/>\");\r\n    var url = window.URL.createObjectURL(new Blob([data], { type: type }));\r\n    a.attr(\"href\", url);\r\n    a.attr(\"download\", name);\r\n    $(\"body\").append(a);\r\n    a[0].click();\r\n    window.URL.revokeObjectURL(url);\r\n    a.remove();\r\n}\r\n$(document).on('keydown', function (e) {\r\n    if (e.key === \"d\") {\r\n    }\r\n});\r\nmap.on('pointermove', function (e) {\r\n    var pixel = map.getEventPixel(e.originalEvent);\r\n    var hit = map.hasFeatureAtPixel(pixel);\r\n    map.getViewport().style.cursor = hit ? 'marker' : '';\r\n});\r\nvar cid = 0;\r\nvar currentid = 0;\r\nvar points = [];\r\nvar obj = {};\r\nobj.points = points;\r\nmap.on('contextmenu', function (e) {\r\n    var coords = toLonLat(e.coordinate);\r\n    var lat = coords[1];\r\n    var lon = coords[0];\r\n    document.getElementById(\"map\").style.cursor = \"\";\r\n    var lonlat = [lon, lat];\r\n    var point = {\r\n        \"id\": cid,\r\n        \"lonlat\": lonlat,\r\n        \"text\": \"TEXT\"\r\n    };\r\n    obj.points.push(point);\r\n    cid += 1;\r\n    updatelist();\r\n    ploticons();\r\n});\r\nfunction ploticons() {\r\n    map.getLayers().getArray().slice().forEach(function (layer) {\r\n        if (layer && layer.get('name') !== 'Marker') {\r\n            map.removeLayer(layer);\r\n        }\r\n    });\r\n    obj['points'].forEach(function (element) {\r\n        var ft = new ol.Feature({\r\n            geometry: new Point(fromLonLat([element.lonlat[0], element.lonlat[1]])),\r\n        });\r\n        if (element.id + 1 == cid) {\r\n            ft.setStyle(currentStyle);\r\n            currentid = element.id;\r\n            document.getElementById(element.id).style.backgroundColor = \"lightgray\";\r\n        }\r\n        else {\r\n            ft.setStyle(activeStyle);\r\n            document.getElementById(element.id).style.backgroundColor = \"white\";\r\n        }\r\n        var vss = new sVector({\r\n            features: [ft],\r\n        });\r\n        var vll = new lVector({\r\n            source: vss,\r\n        });\r\n        map.addLayer(vll);\r\n    });\r\n}\r\n/* saveFile(\"data.json\", \"data:attachment/text\", \"Hello, world.\"); */\r\nfunction updatelist() {\r\n    map.getLayers().getArray().slice().forEach(function (layer) {\r\n        if (layer && layer.get('name') !== 'Marker') {\r\n            map.removeLayer(layer);\r\n        }\r\n    });\r\n    var a = document.getElementById('lst');\r\n    a.innerHTML = \"\";\r\n    obj['points'].forEach(function (element) {\r\n        a.innerHTML += \"<p id='\" + element.id + \"' class='hbtn'>\" + element.id + \" | \" + element.lonlat + \"</p>\";\r\n    });\r\n    var elements = document.getElementsByClassName(\"hbtn\");\r\n    Array.from(elements).forEach(function (element) {\r\n        element.addEventListener('click', function () {\r\n            obj['points'].forEach(function (e) {\r\n                var ft = new ol.Feature({\r\n                    geometry: new Point(fromLonLat([e.lonlat[0], e.lonlat[1]])),\r\n                });\r\n                if (e.id == element.id) {\r\n                    ft.setStyle(currentStyle);\r\n                    currentid = e.id;\r\n                    document.getElementById(e.id).style.backgroundColor = \"lightgray\";\r\n                }\r\n                else {\r\n                    ft.setStyle(activeStyle);\r\n                    document.getElementById(e.id).style.backgroundColor = \"white\";\r\n                }\r\n                var vss = new sVector({\r\n                    features: [ft],\r\n                });\r\n                var vll = new lVector({\r\n                    source: vss,\r\n                });\r\n                map.addLayer(vll);\r\n            });\r\n        });\r\n    });\r\n}\r\n;\r\n$(\"button#remove\").on('click', function () {\r\n    map.getLayers().getArray().slice().forEach(function (layer) {\r\n        if (layer && layer.get('name') !== 'Marker') {\r\n            map.removeLayer(layer);\r\n        }\r\n    });\r\n    delete obj.points[currentid];\r\n    updatelist();\r\n    ploticons();\r\n});\r\ndocument.getElementById('map').focus();\r\nvar img = document.getElementById('img');\r\n","references":["/home/paulj/hzbg/editor/node_modules/ol/geom/Point.js","/home/paulj/hzbg/editor/node_modules/ol/index.js","/home/paulj/hzbg/editor/node_modules/ol/source/OSM.js","/home/paulj/hzbg/editor/node_modules/ol/source/Vector.js","/home/paulj/hzbg/editor/node_modules/ol/layer/Vector.js","/home/paulj/hzbg/editor/node_modules/ol/proj.js","/home/paulj/hzbg/editor/node_modules/ol/layer.js","/home/paulj/hzbg/editor/node_modules/ol/style.js","/home/paulj/hzbg/editor/features.ts","/home/paulj/hzbg/editor/node_modules/ol/interaction.js","/home/paulj/hzbg/editor/node_modules/ol/interaction/KeyboardZoom.js","/home/paulj/hzbg/editor/node_modules/ol/Collection.js","/home/paulj/hzbg/editor/node_modules/ol/control.js","/home/paulj/hzbg/editor/node_modules/ol/size.js"]}
